pipeline WeatherProcessingPipeline {

    // Define the sequence of operations for processing weather data
    DownloadZipArchive 
        -> UnzipArchive 
        -> LocateCSVFile 
        -> ReadRawCSV 
        -> ParseCSVContent 
        -> RenameBatteryColumn 
        -> RenameHeaders 
        -> ValidateData 
        -> ConvertTemperatureToFahrenheit 
        -> ConvertBatteryTemperatureToFahrenheit 
        -> SaveToDatabase;

    // Step to download the ZIP file from the specified URL
    block DownloadZipArchive oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    // Step to extract the contents of the ZIP file
    block UnzipArchive oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    // Step to identify and select the specific CSV file from the archive
    block LocateCSVFile oftype FilePicker {
        path: "/data.csv";
    }

    // Step to read the CSV file as plain text
    block ReadRawCSV oftype TextFileInterpreter {}

    // Step to parse the raw text into a structured table format
    block ParseCSVContent oftype CSVInterpreter {
        delimiter: ";"; // Use semicolon as the delimiter
    }

    // Rename the battery column
    block RenameBatteryColumn oftype CellWriter {
        at: cell J1; 
        write: ["battery_temperature"];
    }

    // Update headers for the dataset
    block RenameHeaders oftype CellWriter {
        at: range A1:E1; 
        write: ["id", "manufacturer", "device_model", "recorded_month", "temperature"];
    }

    // Define the expected structure of the dataset and validate column types
    block ValidateData oftype TableInterpreter {
        header: true;
        columns: [
            "id" oftype integer,
            "manufacturer" oftype text,
            "device_model" oftype text,
            "recorded_month" oftype MonthType,
            "temperature" oftype decimal,
            "battery_temperature" oftype decimal
        ];
    }

    // Define the Celsius to Fahrenheit conversion transformation
    transform CelsiusToFahrenheitConverter {
        from Celsius oftype decimal;
        to Fahrenheit oftype decimal;

        Fahrenheit: 32 + ((Celsius * 9) / 5);
    }

    // Apply the conversion for the temperature column
    block ConvertTemperatureToFahrenheit oftype TableTransformer {
        inputColumns: ["temperature"];
        outputColumn: "temperature";
        uses: CelsiusToFahrenheitConverter;
    }

    // Apply the conversion for the battery temperature column
    block ConvertBatteryTemperatureToFahrenheit oftype TableTransformer {
        inputColumns: ["battery_temperature"];
        outputColumn: "battery_temperature";
        uses: CelsiusToFahrenheitConverter;
    }

    // Define a constraint for valid months (1â€“12)
    constraint ValidMonthRange oftype RangeConstraint {
        lowerBound: 1;
        upperBound: 12;
        lowerBoundInclusive: true;
        upperBoundInclusive: true;
    }

    // Create a custom type for the month column with validation
    valuetype MonthType oftype integer {
        constraints: [ValidMonthRange];
    }

    // Save the processed data into an SQLite database
    block SaveToDatabase oftype SQLiteLoader {
        table: "weather_data";
        file: "./weather_data.sqlite";
    }
}
